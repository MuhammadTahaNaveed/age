name: Create production promotion pull request
on:
  issue_comment:                                     
    types: [created]

jobs:
  TriggerOnComment:
    if: ${{ github.event.issue.pull_request }}    # check if the comments come from pull request, exclude those from issue.
    runs-on: ubuntu-latest

    steps:
      - name: Check Keyword and author
        id: trigger
        if: |                                                   # check the keyword and authors(TODO: use actor id for author verification)
          contains('["/sync"]', github.event.comment.body) &&
          contains('["MuhammadTahaNaveed"]', github.actor)
        env:
          PATCH_URL: ${{ github.event.issue.pull_request.patch_url }}
        run: |
          echo "Author and keyword verified.... Triggering event"
          echo "$PATCH_URL" > patch_url.txt
        
      - name: Exit the job if keyword and author unverified
        if: ${{ steps.trigger.conclusion == 'skipped' }}
        run: exit 1

      - name: Upload patch url as artifact
        uses: actions/upload-artifact@v3
        with:
          name: patch_url
          path: patch_url.txt

  SyncPR:
    needs: TriggerOnComment
    runs-on: ubuntu-latest

    steps:
      - name: Download patch_url extracted by previous job
        uses: actions/download-artifact@v3
        with:
          name: patch_url
      - name: Read patch url and set as environment variable
        run: |
          patch_url=$(cat patch_url.txt)
          echo "PATCH_URL=$patch_url" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          ref: PG11
      - name: Create commit using patch for PG11 branch
        run: |
          patch_url=`cat patch_url.txt`
          curl -L $PATCH_URL | git apply -v
          git add .
          git commit -m 'Applied PR [This will be original commit message.]'
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          branch: apply-pr-PG11     #this will contain the head branch name + PG11 + some keyword to indicate that this branch is created by github bot

      #    "patch_url": "https://github.com/MuhammadTahaNaveed/age/pull/79.patch",
# # Download a patch and apply it.
# curl $URL | git apply -v --index
# # Commit patch and add a log message.
# git commit -m "Applied $URL."